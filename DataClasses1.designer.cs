#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarbaSoftware
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bd_Marba")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Projetos2(tbl_Projetos2 instance);
    partial void Updatetbl_Projetos2(tbl_Projetos2 instance);
    partial void Deletetbl_Projetos2(tbl_Projetos2 instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::MarbaSoftware.Properties.Settings.Default.ConexaoMarba, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Projetos2> tbl_Projetos2
		{
			get
			{
				return this.GetTable<tbl_Projetos2>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Projetos2")]
	public partial class tbl_Projetos2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _Pai;
		
		private string _Descricao;
		
		private EntitySet<tbl_Projetos2> _Filhos;
		
		private EntityRef<tbl_Projetos2> _Pais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPaiChanging(System.Nullable<int> value);
    partial void OnPaiChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public tbl_Projetos2()
		{
			this._Filhos = new EntitySet<tbl_Projetos2>(new Action<tbl_Projetos2>(this.attach_Filhos), new Action<tbl_Projetos2>(this.detach_Filhos));
			this._Pais = default(EntityRef<tbl_Projetos2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pai", DbType="Int")]
		public System.Nullable<int> Pai
		{
			get
			{
				return this._Pai;
			}
			set
			{
				if ((this._Pai != value))
				{
					if (this._Pais.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaiChanging(value);
					this.SendPropertyChanging();
					this._Pai = value;
					this.SendPropertyChanged("Pai");
					this.OnPaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(100)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Projetos2_tbl_Projetos2", Storage="_Filhos", ThisKey="ID", OtherKey="Pai")]
		public EntitySet<tbl_Projetos2> Filhos
		{
			get
			{
				return this._Filhos;
			}
			set
			{
				this._Filhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Projetos2_tbl_Projetos2", Storage="_Pais", ThisKey="Pai", OtherKey="ID", IsForeignKey=true)]
		public tbl_Projetos2 Pais
		{
			get
			{
				return this._Pais.Entity;
			}
			set
			{
				tbl_Projetos2 previousValue = this._Pais.Entity;
				if (((previousValue != value) 
							|| (this._Pais.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pais.Entity = null;
						previousValue.Filhos.Remove(this);
					}
					this._Pais.Entity = value;
					if ((value != null))
					{
						value.Filhos.Add(this);
						this._Pai = value.ID;
					}
					else
					{
						this._Pai = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Filhos(tbl_Projetos2 entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_Filhos(tbl_Projetos2 entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
	}
}
#pragma warning restore 1591
